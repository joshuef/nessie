@import "../proto/base.css";
@import "../proto/definitions/_colors.css";

$moduleSpacing:  3rem;


%module-highlight
{
    display:            block;
    content:            '';
    position:           absolute;

    left:               0;
    top:                0;

    height:             100% ;
    width:              0.6rem;

    background:         var( --PC-BLUE );

    opacity:            0;
    transition:         opacity 200ms ease-in-out;
}





.default
{
    /* this needs to be a flex column for vertical alignment
    * of header w/min-height (flexbugs #3) */
    display:        flex;
    flex-direction: column;

    margin-bottom:  $moduleSpacing;

    background:     var( --PC-WHITE );

    box-shadow:     0 0.1rem 0.4rem 0 var( --GS-8 );

    .default /* nested module */
    {
        box-shadow: none;

        .content,
        .header
        {
            padding:    2rem 0;
        }

        .header
        {
            &::before
            {
                left:   -3rem;
            }
        }
        .controls
        {
            right:  0;
        }

        /* negate the module spacing when collapsed submodules are stacked */
        &.default + .default
        {
            margin-top: -$moduleSpacing;
        }
    }

}

.level__2
{
    & > .header + .content
    {
        padding-top:    1rem;
    }
}

.level__3,
.level__4
{
    & > .header,
    & > .content
    {
        padding-top:    2rem;
        padding-bottom: 2rem;
    }
}

.collapsible
{
    & > .header
    {
        cursor: pointer;

        &::before
        {
            @extend %module-highlight;
            transition: height 200ms ease-in-out, opacity 200ms ease-in-out;
            opacity:    1;
        }
    }
}

.collapsed
{
    padding-bottom:  0;

    & > .header
    {
        padding-bottom:     3rem;
        margin-bottom:      0;

        &::before
        {
            transition: height 200ms ease-in-out, opacity 200ms ease-in-out;
            opacity:    0;
            height:     100%;
        }
    }

    &:hover > .header::before
    {
        opacity:    1;
        transition: height 200ms ease-in-out, opacity 200ms ease-in-out;
    }
    .content
    {
        display:    none;
    }
}

.error
{
    & > .header::before
    {
        @extend %module-highlight;
        opacity:            1;
        background-color:   var( --AC-2 );
    }
}

.moduleError
{
    &::before
    {
        content:            '';
        position:           absolute;

        left:               0;
        top:                0;

        height:             calc( 100% );
        width:              0.6rem;

        background-color:   var( --AC-2 );
        transition:         opacity 0.1s ease-in-out, opacity 200ms ease-in-out;

    }
}




.subtleHighlight
{
    .header::before
    {
        display:            none;

    }

    &::before
    {
        @extend %module-highlight;
        height:             100%;
        background:         var( --PC-GREY );
        opacity:            1;
        left:               -3rem;

    }

    &.collapsed::before
    {

        opacity:            0;
    }

    &.collapsed:hover::before
    {
        transition:         height 200ms ease-in-out, opacity 200ms ease-in-out;
        opacity:            1;

    }
}









.header
{
    position:           relative;

    display:            flex;
    flex-direction:     row;
    justify-content:    flex-start;
    align-items:        center;

    padding:            3rem;
}

.title
{
    flex:       0 0 100%;
    max-width:  100%;
}

.controls
{
    display:            flex;
    position:           absolute;

    height:             2.2rem;
    top:                calc( 50% - 1.1rem );

    right:              3rem;

    flex-direction:     row;
    align-items:        center;
    justify-content:    flex-end;

    & > *
    {
        flex:           0 0 auto;

        margin-right:   3rem;
        margin-bottom:  0;

        &:last-child
        {
            margin-right:   0;
        }
    }
}

.content
{
    position:   relative;

    margin:     0;
    padding:    3rem;
}

.loadingOverlay
{
    display:            flex;
    flex-direction:     row;
    justify-content:    center;
    align-items:        center;

    position:   absolute;
    z-index:    1;

    top:        0;
    bottom:     0;

    left:       0;
    right:      0;

    width:      100%;
    height:     100%;

    background-color:   color( var( --PC-WHITE ) a( 50% ) );
}
